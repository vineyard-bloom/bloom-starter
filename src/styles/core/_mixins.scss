/*
MIXINS
======
aka functions to output css
*/

/* helper function for linear-gradient mixin */
@function is-direction($value) {
  $is-keyword: index(

    (
      to top,
      to top right,
      to right top,
      to right,
      to bottom right,
      to right bottom,
      to bottom,
      to bottom left,
      to left bottom,
      to left,
      to left top,
      to top left
    ),
    $value
  );
  $is-angle: type-of($value) == 'number' and
    index('deg' 'grad' 'turn' 'rad', unit($value));

  @return $is-keyword or $is-angle;
}

/* use to build backgrounds that transition from one color to another (default direction is 45deg) */
@mixin linear-gradient($direction, $color-stops...) {
  /* example directions: to top. to top right, to right, to bottom, to bottom left, etc. OR 90deg, 5rad, 120grad, 44turn */
  @if is-direction($direction) == false {
    $color-stops: $direction, $color-stops;
    $direction: 45deg;
  }

  background: nth(nth($color-stops, 1), 1);
  background: linear-gradient($direction, $color-stops);
}

@mixin transition($args...) {
  -webkit-transition: $args;
  -moz-transition: $args;
  -ms-transition: $args;
  -o-transition: $args;
  transition: $args;
}

@mixin button-variant($color, $background, $border) {
  color: $color;
  background-color: $background;
  border-color: $border;

  .Button-contents .Loading {
    height: 0.8em;
  }

  &:focus,
  &.is-focus {
    color: $color;
    background-color: darken($background, 10%);
    border: 1px solid darken($border, 25%);
  }
  &:hover {
    color: $color;
    background-color: darken($background, 10%);
    border: 1px solid darken($border, 12%);
  }
  &:active,
  &.is-active,
  .open > &.dropdown-toggle {
    color: $color;
    background-color: darken($background, 10%);
    border: 1px solid darken($border, 12%);

    &:hover,
    &:focus,
    &.is-focus {
      color: $color;
      background-color: darken($background, 17%);
      border: 1px solid darken($border, 25%);
    }
  }
  &:active,
  &.is-active,
  .open > &.dropdown-toggle {
    background-image: none;
  }
  &.is-disabled,
  &[disabled],
  fieldset[disabled] & {
    border: 1px solid $border;
    cursor: not-allowed;

    &:hover,
    &:focus,
    &.is-focus {
      background-color: $background;
      border: 1px solid $border;
    }
  }

  .badge {
    color: $background;
    background-color: $color;
  }
}

@mixin tab-focus() {
  // WebKit-specific. Other browsers will keep their default outline style.
  // (Initially tried to also force default via `outline: initial`,
  // but that seems to erroneously remove the outline in Firefox altogether.)
  outline: 5px auto -webkit-focus-ring-color;
  outline-offset: -2px;
}

@mixin box-shadow($shadow...) {
  -webkit-box-shadow: $shadow; // iOS <4.3 & Android <4.1
  box-shadow: $shadow;
}

// Button sizes
@mixin button-size($padding-vertical, $padding-horizontal, $font-size, $line-height, $border-radius) {
  padding: $padding-vertical $padding-horizontal;
  font-size: $font-size;
  line-height: $line-height;
  border-radius: $border-radius;
}

@mixin alert-variant($background, $border, $text-color) {
  background-color: $background;
  border-color: $border;
  color: $text-color;

  hr {
    border-top-color: darken($border, 5%);
  }
  .Alert-link {
    color: darken($text-color, 10%);
  }
}

@mixin opacity($opacity) {
  opacity: $opacity;
  // IE8 filter
  $opacity-ie: ($opacity * 100);
  filter: alpha(opacity=$opacity-ie);
}
